
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <title>Annapurna</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <style>
        body {
            display: flex;
            flex-direction: column;
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically */
            height: 100vh; /* Full viewport height */
            margin: 0;
            font-family: Arial, sans-serif;
        }
      
        #form-container {
            position: relative;
            background: white;
            padding: 10px;
            border-radius: 5px;
            z-index: 1000;
            border: 2px solid #333; /* Solid border around the form container */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px; /* Space between the form and the map */
        }
      
        #address {
            width: 100%; /* Full width of the form container */
            padding: 8px;
            border: 1px solid #ddd; /* Border around the input field */
            border-radius: 4px; /* Rounded corners for the input field */
            box-sizing: border-box; /* Include padding and border in the element's total width and height */
        }
      
        #map-container {
            display: flex;
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically */
            width: 600px; /* Fixed width for the map container */
            height: 600px; /* Fixed height for the map container */
            border: 2px solid #333; /* Solid border around the map container */
        }
      
        #map {
            width: 100%; /* Make the map fill the container */
            height: 100%; /* Make the map fill the container */
        }
        .btn-dark{
            color:aliceblue;
            background-color: black;
        }
        h1{
            background-color: green;
        }
      </style>
      
</head>
<body>
    <h1>Annapurna</h1>
    <h3>Search your Destination on Map</h3>

    <div id="form-container">
        <form id="address-form">
            <label for="address">Address:</label>
            <input type="text" id="address" name="address" required>
            <button type="submit">Go</button>
        </form>
        <hr>
    </div>
    <div id="map-container">
        <div id="map"></div>
    </div>
    <script>
        var map = L.map('map').setView([0, 0], 2);
        L.tileLayer("https://api.maptiler.com/maps/streets-v2/{z}/{x}/{y}.png?key=xwLRXkAFBgiADnj13C9a", {
            attribution: '<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>'
        }).addTo(map);

        var marker;

        document.getElementById('address-form').addEventListener('submit', function(event) {
            event.preventDefault();
            var address = document.getElementById('address').value;
            geocodeAddress(address);
        });

        function geocodeAddress(address) {
            var url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        var lat = data[0].lat;
                        var lon = data[0].lon;

                        if (marker) {
                            marker.setLatLng([lat, lon]);
                        } else {
                            marker = L.marker([lat, lon], { draggable: true }).addTo(map);
                            marker.on('dragend', function(event) {
                                var position = marker.getLatLng();
                                updateInfo(position.lat, position.lng);
                            });
                        }
                        map.setView([lat, lon], 13);
                        updateInfo(lat, lon);
                    } else {
                        alert('Address not found.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function updateInfo(lat, lon) {
            document.getElementById('latitude').textContent = lat.toFixed(5);
            document.getElementById('longitude').textContent = lon.toFixed(5);
        }
    </script>
    <br>
    
    <form action="/listings">
        <button class="btn-dark">Back</button>
    </form>
   
</body>
</html>
